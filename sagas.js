import { takeEvery, takeLatest } from 'redux-saga/effects';
import { login, logout, refreshToken, register, socialLogin, forgotPassword, validateForgotPasswordToken, resetPassword } from './actions/authActions';
import { fetchEnquiryProducts, fetchEnquiryProduct, submitEnquiryProducts, uploadEnquiryProductBrandAsset, importEnquiryProducts, fetchEnquiryProductSizeGuides, importEnquiryProductSizeGuides } from './actions/enquiryProductActions';
import { contactUs, bulkOrder, fetchUser, fetchUsers, updateUserProfile, updateUserPassword, updateUserAddress, fetchUserCards, saveUserCard, deleteUserCard, fetchUserAddresses, saveUserAddress, deleteUserAddress } from './actions/userActions';
import { fetchSettings, saveSettings } from './actions/settingsActions';
import * as TYPES from './constants/actionTypes';
import { accessApiPoll } from './actions/apiPollActions';
import { fetchBlogs, fetchBlog, fetchBlogCategories, fetchCaseStudies, fetchCaseStudy, fetchCaseStudyCategories, fetchCuratedPacksStrapi, fetchCuratedPack, fetchCuratedPacksCount, fetchContactUsHelpOptions, fetchMerchTeamMembers, fetchHeaderBanners, fetchFooterBanners, fetchMomentsOfMerchMagic, fetchInspos, fetchInspo, fetchInspoCategories, fetchBrands } from './actions/strapiActions';
import { fetchInstagramFeed } from './actions/otherActions';

function* rootSaga() {
    yield takeLatest(TYPES.SIGNUP_REQUEST, register);
    yield takeLatest(TYPES.LOGIN_REQUEST, login);
    yield takeLatest(TYPES.LOGOUT_REQUEST, logout);
    yield takeLatest(TYPES.SOCIAL_LOGIN_REQUEST, socialLogin);
    yield takeLatest(TYPES.REFRESH_TOKEN_REQUEST, refreshToken);
    yield takeLatest(TYPES.FETCH_USERS_REQUEST, fetchUsers);
    yield takeLatest(TYPES.FETCH_USER_REQUEST, fetchUser);
    yield takeLatest(TYPES.FETCH_USER_CARDS_REQUEST, fetchUserCards);
    yield takeLatest(TYPES.SAVE_USER_CARD_REQUEST, saveUserCard);
    yield takeLatest(TYPES.DELETE_USER_CARD_REQUEST, deleteUserCard);
    yield takeLatest(TYPES.FETCH_USER_ADDRESSES_REQUEST, fetchUserAddresses);
    yield takeLatest(TYPES.SAVE_USER_ADDRESS_REQUEST, saveUserAddress);
    yield takeLatest(TYPES.DELETE_USER_ADDRESS_REQUEST, deleteUserAddress);
    yield takeLatest(TYPES.UPDATE_USER_PROFILE_REQUEST, updateUserProfile);
    yield takeLatest(TYPES.UPDATE_USER_PASSWORD_REQUEST, updateUserPassword);
    yield takeLatest(TYPES.UPDATE_USER_ADDRESS_REQUEST, updateUserAddress);
    yield takeLatest(TYPES.FETCH_SETTINGS_REQUEST, fetchSettings);
    yield takeLatest(TYPES.SAVE_SETTINGS_REQUEST, saveSettings);
    yield takeLatest(TYPES.CONTACT_US_REQUEST, contactUs);
    yield takeLatest(TYPES.BULK_ORDER_REQUEST, bulkOrder);
    yield takeLatest(TYPES.FORGOT_PASSWORD_REQUEST, forgotPassword);
    yield takeLatest(TYPES.VALIDATE_FORGOT_PASSWORD_TOKEN_REQUEST, validateForgotPasswordToken);
    yield takeLatest(TYPES.RESET_PASSWORD_REQUEST, resetPassword);
    yield takeLatest(TYPES.CREATE_API_POLL_REQUEST, accessApiPoll);
    yield takeLatest(TYPES.FETCH_BLOGS_REQUEST, fetchBlogs);
    yield takeLatest(TYPES.FETCH_BLOG_REQUEST, fetchBlog);
    yield takeLatest(TYPES.FETCH_BLOG_CATEGORIES_REQUEST, fetchBlogCategories);
    yield takeLatest(TYPES.FETCH_CASE_STUDIES_REQUEST, fetchCaseStudies);
    yield takeLatest(TYPES.FETCH_CASE_STUDY_REQUEST, fetchCaseStudy);
    yield takeLatest(TYPES.FETCH_CASE_STUDY_CATEGORIES_REQUEST, fetchCaseStudyCategories);
    yield takeLatest(TYPES.FETCH_INSTAGRAM_FEED_REQUEST, fetchInstagramFeed);
    yield takeLatest(TYPES.FETCH_CURATED_PACKS_STRAPI_REQUEST, fetchCuratedPacksStrapi);
    yield takeLatest(TYPES.FETCH_CURATED_PACK_REQUEST, fetchCuratedPack);
    yield takeLatest(TYPES.FETCH_CURATED_PACKS_COUNT_REQUEST, fetchCuratedPacksCount);
    yield takeLatest(TYPES.FETCH_CONTACT_US_HELP_OPTIONS_REQUEST, fetchContactUsHelpOptions);
    yield takeLatest(TYPES.FETCH_MERCH_TEAM_MEMBERS_REQUEST, fetchMerchTeamMembers);
    yield takeLatest(TYPES.FETCH_HEADER_BANNERS_REQUEST, fetchHeaderBanners);
    yield takeLatest(TYPES.FETCH_FOOTER_BANNERS_REQUEST, fetchFooterBanners);
    yield takeLatest(TYPES.FETCH_MOMENTS_OF_MERCH_MAGIC_REQUEST, fetchMomentsOfMerchMagic);
    yield takeLatest(TYPES.FETCH_INSPOS_REQUEST, fetchInspos);
    yield takeLatest(TYPES.FETCH_INSPO_REQUEST, fetchInspo);
    yield takeLatest(TYPES.FETCH_INSPO_CATEGORIES_REQUEST, fetchInspoCategories);
    yield takeLatest(TYPES.FETCH_BRANDS_REQUEST, fetchBrands);
    yield takeLatest(TYPES.FETCH_ENQUIRY_PRODUCTS_REQUEST, fetchEnquiryProducts);
    yield takeLatest(TYPES.FETCH_ENQUIRY_PRODUCT_REQUEST, fetchEnquiryProduct);
    yield takeLatest(TYPES.SUBMIT_ENQUIRY_PRODUCTS_REQUEST, submitEnquiryProducts);
    yield takeLatest(TYPES.UPLOAD_ENQUIRY_PRODUCT_BRAND_ASSET_REQUEST, uploadEnquiryProductBrandAsset);
    yield takeLatest(TYPES.IMPORT_ENQUIRY_PRODUCTS_REQUEST, importEnquiryProducts);
    yield takeLatest(TYPES.FETCH_ENQUIRY_PRODUCT_SIZE_GUIDES_REQUEST, fetchEnquiryProductSizeGuides);
    yield takeLatest(TYPES.IMPORT_ENQUIRY_PRODUCT_SIZE_GUIDES_REQUEST, importEnquiryProductSizeGuides);
}

export default rootSaga;